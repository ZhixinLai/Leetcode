# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution(object):
    def sortedListToBST(self, head):
        """
        :type head: ListNode
        :rtype: TreeNode
        """
        res = []
        while head:
            res.append(head.val)
            head = head.next
        return self.dfs(res)
    
    def dfs(self, res):
        if not res:
            return
        mid = len(res)//2
        tree = TreeNode(res[mid])
        tree.left = self.dfs(res[:mid])
        tree.right = self.dfs(res[mid+1:])
        return tree
        
        
