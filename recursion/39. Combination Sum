// Java
class Solution {
    List<List<Integer>> res = new ArrayList<>();
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        
        Arrays.sort(candidates);
        List<Integer> temp = new ArrayList<>();
        recur(candidates, target, 0, temp);
        return res;
    }
    
    public void recur(int[] can, int tar, int i, List<Integer> temp){
        if (tar == 0) {
            res.add(new ArrayList<Integer> (temp));
            return;
        }

        else if(tar>0){
            for(;i<can.length&&tar>=can[i];i++){
                temp.add(can[i]);
                recur(can, tar-can[i], i, temp);
                temp.remove(temp.size()-1);
            }
        }
    }
}
