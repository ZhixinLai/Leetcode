class Solution:
    def convert(self, s: str, numRows: int) -> str:
        """
        if not s:
            return ''
        if numRows == 1:
            return s
        loop_num = numRows + numRows - 2
        column_num = [0] * loop_num
        loc_list = [[0] * 2 for i in range(len(s))]
        res = [''] * len(s)
        for i in range(len(s)):
            loc_list[i][0] = i // loop_num
            loc_list[i][1] = i % loop_num
            column_num[loc_list[i][1]] += 1
        for i in range(1, len(column_num)-1):
            column_num[i] += column_num[loop_num-i]
        column_num[numRows-1] = column_num[-1]
        column_num = column_num[:numRows]
        for i in range(1, len(column_num)):
            column_num[i] += column_num[i-1]
        for i,j in enumerate(loc_list):
            if j[1] == 0:
                res[j[0]] = s[i]
            elif j[1] == numRows-1:
                res[column_num[-2]+j[0]] = s[i]
            else:
                if j[1] < numRows - 1:
                    res[column_num[j[1]-1]+j[0]*2] = s[i]
                else:
                    res[column_num[(loop_num-j[1])-1]+j[0]*2+1] = s[i]
        return ''.join(res)
        """
        """
        :type s: str
        :type numRows: int
        :rtype: str
        """
        if numRows == 1 or numRows >= len(s):
            return s

        L = [''] * numRows
        index, step = 0, 1

        for x in s:
            L[index] += x
            if index == 0:
                step = 1
            elif index == numRows -1:
                step = -1
            index += step
        print (L)
        return ''.join(L)
