class Solution:
    # method one: remove the duplicate number and use binary research method
    def search1(self, nums, target):
        nums = list(set(nums))
        left, right = 0, len(nums)-1
        while left <= right:
            mid = (left+right)//2
            if nums[mid] == target:
                return True
            # the left part is in ordered
            if nums[left] < nums[mid]:
                if nums[left] <= target <= nums[mid]:
                    right = mid-1
                else:
                    left = mid+1
            # the second part is in ordered
            else:
                if nums[right] >= target >= nums[mid]:
                    left = mid+1
                else:
                    right = mid-1
        return False
        
      
     # method two : without removing the duplicate number and do some work when meet duplicate element
     def search2(self, nums, target):
        left, right = 0, len(nums) - 1
        while left <= high:
            mid = (left + right) // 2
            if target == nums[mid]:
                return True
            # the difference part compared with method one
            while left < mid and nums[left] == nums[mid]:
                left += 1
            if nums[left] <= nums[mid]:
                if nums[left] <= target <= nums[mid]:
                    right = mid - 1
                else:
                    low = mid + 1
            else:
                if nums[right] >= target >= nums[mid]:
                    left = mid + 1
                else:
                    right = mid - 1
        return False
